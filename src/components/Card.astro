---
export interface Props {
  title?: string;
  body?: string;
  href?: string;
  imgSrc?: string;
  imgHeight?: string;
}

const { href, title, body } = Astro.props as Props;
---

<script></script>

<>
  <li class="link-card">
    <a href={href}>
      <h2>
        {title}
        <span>&rarr;</span>
      </h2>
      <p>
        {body}
      </p>
    </a>
  </li>
</>
<style>
  :root {
    --link-gradient: linear-gradient(
      45deg,
      #00ff2a,
      #248f7d 40%,
      var(--color-border)
    );
  }

  .link-card {
    color: black;
    list-style: none;
    display: flex;
    padding: 0.7rem;
    background-image: var(--link-gradient);
    background-size: 400%;
    border-radius: 0.5rem;
    background-position: 30%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: 1em 1.3em;
    border-radius: 0.35rem;
    opacity: 0.8;
  }

  h2 {
    margin: 0;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    text-align: center;
  }

  p {
    margin-top: 0.75rem;
    margin-bottom: 0;
    text-align: center;
  }

  h2 span {
    display: inline-block;
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  }

  img {
    padding-top: 3vh;
    margin: auto;
    display: block;
  }

  .link-card:is(:hover, :focus-within) {
    background-position: 0;
  }

  .link-card:is(:hover, :focus-within) h2 {
    color: #075dce;
  }

  .link-card:is(:hover, :focus-within) h2 span {
    will-change: transform;
    transform: translateX(2px);
  }

  #fcc {
    background-color: black;
  }
</style>
